

;
; ╔═════════════════════════════════════════════════════════════════════════╗
; ║	This file is generated by The Interactive Disassembler (IDA)	    ║
; ║	Copyright (c) 2004 by DataRescue sa/nv,	<ida@datarescue.com>	    ║
; ║		Licensed to: Lennart Reus, 1 user, std,	07/2003		    ║
; ╚═════════════════════════════════════════════════════════════════════════╝
;

; Processor	  : 8085 []
; Target assembler: Table Driven Assembler (TASM) by Speech Technology Inc.

; ═══════════════════════════════════════════════════════════════════════════

; Segment type:	Regular
		.org 0F000h
		.block 750h
aDebug:		.block 1
Dat1:		.block 1
Dat2:		.block 1
Dat3:		.block 1
Dat4:		.block 1
Dat5:		.block 1
		.block 1
unk_F757:	.block 1
		.block 1
unk_F759:	.block 1
unk_F75A:	.block 1
		.block 1
DatMag:		.block 1
unk_F75D:	.block 1
		.block 1
		.block 1
		.block 1
		.block 1
NewStart:	.block 1
		.block 1
DatReg:		.block 1		; FE5Do
Dreg:		.block 2		; FE8Do Br2o
		.block 2
		.block 2
unk_F76B:	.block 1
		.block 1
unk_F76D:	.block 1
		.block 1
unk_F76F:	.block 1
		.block 1
dBreak:		.block 1
unk_F772:	.block 1
aBreak:		.block 1
		.block 1
Point1:		.block 1
		.block 1
unk_F777:	.block 1
		.block 1
dSong:		.block 1		; F883w Playo
FlagSc:		.block 1
unk_F77B:	.block 1
BufIn:		.block 3Fh
Buf:		.block 40h
		.block 2
		.block 2
Stack:		.block 1
; end of 'RAM'

; ───────────────────────────────────────────────────────────────────────────
; ═══════════════════════════════════════════════════════════════════════════

; Segment type:	Pure code
		.org 0F800h

Start:					; Монитор для операционной системы ЮТ
		jmp	begin
; ───────────────────────────────────────────────────────────────────────────
		jmp	CI		; Ввод данных с	консоли
; ───────────────────────────────────────────────────────────────────────────
		jmp	ReadByteMag	; Чтение байта с магнитофона
; ───────────────────────────────────────────────────────────────────────────
		jmp	CO		; Вывод	на консоль в С
; ───────────────────────────────────────────────────────────────────────────
		jmp	WriteByteMag	; Запись байта на магнитофон
; ───────────────────────────────────────────────────────────────────────────
		jmp	CO		; Вывод	на консоль в С
; ───────────────────────────────────────────────────────────────────────────
		jmp	CIctrl		; Проверка состояния клавиатуры
; ───────────────────────────────────────────────────────────────────────────
		jmp	COaH		; Вывод	на консоль содержимого A в 16
; ───────────────────────────────────────────────────────────────────────────
		jmp	Message		; Вывод	на консоль сообщения, заканчивается 0
; ───────────────────────────────────────────────────────────────────────────

begin:					; Startj
		lxi	sp, Stack	; Начальный запуск монитора
		mvi	a, 0FFh
		sta	FlagSc
		lxi	h, 202Dh	; Константы для	магнитофона
		shld	DatMag
		lxi	h, MonW		; Рестарт монитора
		shld	NewStart
		mvi	a, 1Fh
		call	Clear		; Очистка экрана
		lxi	h, aOsT88	; "\n**** os   *   `T-88 ****\n"
		call	Message		; Вывод	на консоль сообщения, заканчивается 0
; START	OF FUNCTION CHUNK FOR sub_FBB9

MonW:					; F868j
					; F829o ...
		lxi	sp, Stack
		mvi	a, 8Bh ; 'Л'
		out	4		; Для работы с клавиатурой
		lxi	h, aT88		; "\n`T*88> "
		call	Message		; Вывод	на консоль сообщения, заканчивается 0
		push	h
		call	sub_FA8B
		lxi	h, Data1
		xthl
		lda	unk_F77B
		mov	b, a

Mw1:					; F85Ej
		mov	a, m
		ora	a
		cz	sub_FBB9
		cmp	b
		inx	h
		mov	e, m
		inx	h
		mov	d, m
		inx	h
		jnz	Mw1
		xchg
		pchl
; END OF FUNCTION CHUNK	FOR sub_FBB9
; ───────────────────────────────────────────────────────────────────────────
Data1:		.db  3Bh ; ;		; F84Bo
		.db  3Bh ; ;
; ───────────────────────────────────────────────────────────────────────────
; START	OF FUNCTION CHUNK FOR sub_FBB9

loc_F865:				; FBBCj
		call	sub_FF02
		jmp	MonW
; END OF FUNCTION CHUNK	FOR sub_FBB9

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Ввод данных с	консоли

CI:					; F803j Co7p ...
		push	h
		push	d
		push	b
		lhld	unk_F75A
		lxi	d, 0F801h
		dad	d
		push	h

Ci1:					; F88Ej
		mov	a, m
		cma
		mov	m, a

Ci2:					; F88Bj F899j	...
		lxi	b, 0FEF8h
		call	CIctrl		; Проверка состояния клавиатуры
		jnz	Ci3
		cma
		sta	dSong
		dcx	d
		mov	a, d
		ani	5Fh
		ora	e
		jnz	Ci2
		jmp	Ci1
; ───────────────────────────────────────────────────────────────────────────

Ci3:					; F87Fj F8A5j
		lxi	d, 77Fh
		mov	a, c
		add	d
		mov	c, a
		cpi	37h ; '7'
		jz	Ci2
		mov	a, b
		out	7
		rlc
		mov	b, a
		in	6
		ana	e
		cmp	e
		jz	Ci3

Ci4:					; F8AAj
		rar
		inx	b
		jc	Ci4
		lxi	h, 0F8F0h
		push	h
		mov	a, c
		lxi	b, 3040h
		cmp	b
		jnc	Ci6
		add	b
		cpi	3Ch ; '<'
		jc	Ci5
		cmp	c
		jnc	Ci5
		ani	2Fh

Ci5:					; F8BCj F8C0j
		mov	e, a
		in	5
		cma
		ana	d
		rar
		rar
		rar
		inr	a
		dcr	a
		mov	a, e
		jm	Ci7
		jc	Ci8
		rz
		ori	20h
		ret
; ───────────────────────────────────────────────────────────────────────────

Ci6:					; F8B6j
		lxi	h, Tbl1		; Таблица управляющих символов
		sub	b
		add	l
		mov	l, a
		mov	a, m
		ret
; ───────────────────────────────────────────────────────────────────────────

Ci7:					; F8D0j
		ani	1Fh
		ret
; ───────────────────────────────────────────────────────────────────────────

Ci8:					; F8D3j
		cmp	c
		rnc
		mov	e, a
		cma
		ani	10h
		rlc
		add	e
		sui	10h
		ret
; End of function CI

; ───────────────────────────────────────────────────────────────────────────

Play:					; Воспроизвести	звук
		lxi	h, dSong
		cmp	m
		mov	m, a
		dcx	h
		jz	Pl3
		mvi	m, 80h ; 'А'

Pl1:					; F91Cj
		mvi	b, 10h
		xra	a		; Запись 16 нулей

Pl2:					; F902j
		call	WriteByteMag	; Запись байта на магнитофон
		dcr	b
		jnz	Pl2
		inx	h
		mov	a, m
		pop	h
		mov	m, a
		pop	b
		pop	d
		pop	h
		ret
; ───────────────────────────────────────────────────────────────────────────

Pl3:					; F8F6j F918j
		call	CIctrl		; Проверка состояния клавиатуры
		jz	Ci2

Pl4:					; F914j
		dcr	a
		jnz	Pl4
		dcr	m
		jnz	Pl3
		inr	m
		jmp	Pl1

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Проверка состояния клавиатуры

CIctrl:					; F812j F87Cp	...
		xra	a
		out	7
		in	6
		cma
		ani	7Fh
		rz
		ori	0FFh
		ret
; End of function CIctrl


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_F92B:				; FBB5p
		push	b
		push	psw
		call	CIctrl		; Проверка состояния клавиатуры
		pop	b
		mov	a, b
		pop	b
		ret
; End of function sub_F92B


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


ReadByteSinx:				; FCF2p FCF9p	...
		mvi	a, 8
; End of function ReadByteSinx


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Чтение байта с магнитофона

ReadByteMag:				; F806j FCEBp	...
		push	b
		push	d
		lxi	b, 100h
		mov	e, a
		in	0A1h
		ana	b
		mov	d, a

RBM1:					; F976j F981j
		mov	a, c
		ani	7Fh
		rlc
		mov	c, a

RBM2:					; F950j
		in	5
		ani	2
		cz	sub_FBB9
		in	0A1h
		ana	b
		cmp	d
		jz	RBM2
		ora	c
		mov	c, a
		lda	DatMag
		adi	3
		dcr	e
		inx	d
		jnz	RBM3
		sui	0Eh

RBM3:					; F95Cj F962j
		dcr	a
		jnz	RBM3
		in	0A1h
		ana	b
		mov	d, a
		mov	a, e
		ora	a
		jp	RBM5
		mvi	a, 0E6h	; 'ц'
		cmp	c
		jz	RBM4
		cma
		cmp	c
		jnz	RBM1
		stc

RBM4:					; F971j
		sbb	c
		sta	unk_F759
		mvi	e, 9

RBM5:					; F96Bj
		dcr	e
		jnz	RBM1
		lda	unk_F759
		xra	c
		pop	d
		pop	b
		ret
; End of function ReadByteMag


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Запись байта на магнитофон

WriteByteMag:				; F80Cj Pl2p ...
		push	b
		push	psw
		mvi	c, 10h
		mov	b, a

WBM1:					; F9ADj
		mov	a, c
		ani	1
		mov	a, b
		jnz	Wbm2
		rlc

Wbm2:					; F994j
		mov	b, a
		xra	c
		out	0A1h
		lda	unk_F75D
		adi	3
		dcr	c
		inx	b
		jnz	WBM3
		sui	0Ah

WBM3:					; F9A3j F9A9j
		dcr	a
		jnz	WBM3
		dcr	c
		jnz	WBM1
		pop	psw
		pop	b
		ret
; End of function WriteByteMag


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	на консоль содержимого A в 16

COaH:					; F815j sub_FBAFp ...
		push	b
		call	HexA
		call	CO		; Вывод	на консоль в С
		mov	c, b
		call	CO		; Вывод	на консоль в С
		pop	b
		ret
; End of function COaH


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


HexA:					; F9B4p
		push	psw
		mov	b, a
		rlc
		rlc
		rlc
		rlc
		call	Nibbl
		mov	c, a
		mov	a, b
		call	Nibbl
		mov	b, a
		pop	psw
		ret
; End of function HexA


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Nibbl:					; F9C6p F9CBp
		ani	0Fh
		cpi	0Ah
		jm	Ni1
		adi	7

Ni1:					; F9D5j
		adi	30h ; '0'
		ret
; End of function Nibbl


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	на консоль сообщения, заканчивается 0

Message:				; F818j F837p	...
		push	psw

Msg1:					; F9E4j
		mov	a, m
		inx	h
		ora	a
		cnz	Clear		; Очистка экрана
		jnz	Msg1
		pop	psw
		ret
; End of function Message


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Очистка экрана

Clear:					; F831p F9E1p	...
		push	b
		mov	c, a
		call	CO		; Вывод	на консоль в С
		pop	b
		ret
; End of function Clear


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	на консоль в С

CO:					; F809j F80Fj	...

; FUNCTION CHUNK AT FA39 SIZE 00000007 BYTES
; FUNCTION CHUNK AT FA4D SIZE 0000003E BYTES

		push	h
		push	d
		push	b
		push	psw

Co1:					; FB9Ej
		lxi	h, ENDco	; Завершение программы ввода
		push	h
		lhld	unk_F75A
		lxi	d, Tbl2

Co2:					; FA04j
		ldax	d
		cmp	c
		jz	Co3
		inr	e
		jnz	Co2
		mov	m, c
		inx	h
		jmp	Co4
; ───────────────────────────────────────────────────────────────────────────

Co3:					; FA00j
		mov	a, e
		sui	9
		mov	e, a
		ldax	d
		mov	e, a
		mvi	d, 0FAh	; '·'
		push	d
		ret
; End of function CO

; ───────────────────────────────────────────────────────────────────────────

ENDco:					; Co1o
		shld	unk_F75A	; Завершение программы ввода
		pop	psw
		pop	b
		pop	d
		pop	h
		ret

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Home:					; FA86p
		lxi	h, 0E800h
		lxi	d, 0E000h
; End of function Home


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Hom1:					; FA2Cj FA76p
		xra	a
		mov	m, a
		stax	d
		inx	h
		inx	d
		mov	a, h
		cpi	0F0h ; 'Ё'
		jnz	Hom1
		lxi	h, 0E800h
		ret
; End of function Hom1

; ───────────────────────────────────────────────────────────────────────────
		dcx	h
		mov	a, h
		cpi	0E7h ; 'ч'
		rnz
		inx	h
; START	OF FUNCTION CHUNK FOR CO

Co4:					; FA09j loc_FA4Cj ...
		mov	a, h
		cpi	0EFh ; 'я'
		jz	Co5
		ret
; END OF FUNCTION CHUNK	FOR CO
; ───────────────────────────────────────────────────────────────────────────
		lxi	d, TblCom2
		dad	d
		mov	a, h
		cpi	0E7h ; 'ч'
		rnz
		lxi	d, 40h ; '@'
		dad	d

loc_FA4C:				; FA6Fj
		jmp	Co4
; ───────────────────────────────────────────────────────────────────────────

CO9:
		mov	a, l
		ani	0C0h
		adi	40h ; '@'
		mov	l, a
		rnc
		inr	h
		jmp	Co4
; ───────────────────────────────────────────────────────────────────────────

Co5:					; FA3Cj
		push	psw
		lda	FlagSc
		ora	a
		jz	Co7
		lxi	d, 0E840h
		lxi	h, 0E800h
		ldax	d
		mov	m, a
		inx	d
		inx	h
		mov	a, d
		cpi	0EFh ; 'я'
		jnz	loc_FA4C+1
		push	h
		lxi	d, 0E6C0h
		call	Hom1
		pop	h

Co6:					; FA7Ej
		in	5
		ani	1
		jz	Co6
		pop	psw
		ret
; ───────────────────────────────────────────────────────────────────────────

Co7:					; FA5Fj
		call	CI		; Ввод данных с	консоли
		call	Home
		pop	psw
		ret
; END OF FUNCTION CHUNK	FOR CO

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FA8B:				; F848p FDDCp	...

; FUNCTION CHUNK AT FAE3 SIZE 00000068 BYTES
; FUNCTION CHUNK AT FB53 SIZE 0000003A BYTES

		push	h
		push	d
		lxi	h, Buf
		mvi	c, 40h ; '@'

loc_FA92:				; FA96j
		mvi	m, 20h ; ' '    ; Заполняем рабочую область пробелами
		dcx	h
		dcr	c
		jnz	loc_FA92
		jmp	loc_FA9E
; ───────────────────────────────────────────────────────────────────────────
		push	h
		push	d

loc_FA9E:				; FA99j
		call	CI		; Ввод данных с	консоли
		cpi	19h
		jz	CIyc
		cpi	1Ah
		jz	CIyc
		cpi	0Dh
		jz	CIyc
		lxi	d, 0FA9Eh
		push	d
		cpi	8
		jz	kLeft
		cpi	18h
		jz	KRigth
		cpi	20h ; ' '
		jz	Spase		; Вывод	пробела

loc_FAC3:				; FAEFj
		mov	m, a
		cpi	0Ch
		jz	kHome
		cpi	0Ah
		jz	kLF

loc_FACE:				; FAE9j
		cpi	1Fh

kLF:					; FACBj FB56j
		cz	Space		; Вывод	пробела
		cnz	Clear		; Очистка экрана
		inx	b
		inx	h
		mov	a, c
		cpi	40h ; '@'
		rnz
; End of function sub_FA8B


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; На одну позицию влево

kLeft:					; FB5Cp FB6Aj
		dcx	h
		dcx	b
		mvi	a, 8
		jmp	Clear		; Очистка экрана
; End of function kLeft

; ───────────────────────────────────────────────────────────────────────────
; START	OF FUNCTION CHUNK FOR sub_FA8B

KRigth:					; FABBj
		call	YCsim		; Проверка трех	управляющих клавиш
		jc	loc_FB08
		jmp	loc_FACE
; ───────────────────────────────────────────────────────────────────────────

Spase:					; FAC0j
		call	YCsim		; Вывод	пробела
		jnc	loc_FAC3
		mvi	a, 8
		add	c
		cpi	40h ; '@'
		rnc
		ani	0F8h

Sp1:					; FB04j
		push	psw
		mvi	a, 18h
		call	Clear		; Очистка экрана
		inx	h
		inx	b
		pop	psw
		cmp	c
		jnz	Sp1
		ret
; ───────────────────────────────────────────────────────────────────────────

loc_FB08:				; FAE6j
		push	b
		xchg
		lxi	h, 0F7BAh

loc_FB0D:				; FB31j
		mov	b, h
		mov	c, l
		dcx	b
		ldax	b
		mov	m, a
		xthl
		mov	c, l
		xthl
		push	h
		lhld	unk_F75A
		mov	a, l
		adi	40h ; '@'
		sub	c
		mov	l, a
		xthl
		mvi	a, 0BBh	; '╗'
		sub	l
		mov	c, a
		xthl
		mov	a, l
		sub	c
		mov	l, a
		mov	b, h
		mov	c, l
		dcx	b
		ldax	b
		mov	m, a
		pop	h
		dcx	h
		call	Hilo		; Сравнение адресов HL DE
		jnz	loc_FB0D
		pop	b
		mvi	m, 20h ; ' '
		lhld	unk_F75A
		mvi	m, 20h ; ' '
		xchg
		ret
; ───────────────────────────────────────────────────────────────────────────

CIyc:					; FAA3j FAA8j	...
		call	YCsim		; Проверка трех	управляющих клавиш
		mvi	m, 0Dh
		inx	h
		inx	b
		call	Space		; Вывод	пробела
		pop	d
		pop	h
		ret
; END OF FUNCTION CHUNK	FOR sub_FA8B

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Проверка трех	управляющих клавиш

YCsim:					; KRigthp Spasep ...
		mov	b, a
		in	5		; Порт управляющих клавиш
		rar
		rar
		cmc
		mov	a, b
		ret
; End of function YCsim

; ───────────────────────────────────────────────────────────────────────────
; START	OF FUNCTION CHUNK FOR sub_FA8B

kHome:					; FAC6j
		call	YCsim		; Проверка трех	управляющих клавиш
		jnc	kLF

kH1:					; FB5Fj
		mov	a, c
		ora	a
		rz
		call	kLeft		; На одну позицию влево
		jmp	kH1
; ───────────────────────────────────────────────────────────────────────────

kLeft:					; FAB6j
		call	YCsim		; Проверка трех	управляющих клавиш
		jc	kL1
		mov	a, c
		ora	a
		jnz	kLeft		; На одну позицию влево
		ret
; ───────────────────────────────────────────────────────────────────────────

kL1:					; FB65j
		push	h
		dcx	h

kL2:					; FB88j
		inx	h
		inx	h
		mov	a, m
		dcx	h
		mov	m, a
		mov	a, l
		sui	7Bh ; '{'
		push	h
		lhld	unk_F75A
		add	l
		sub	c
		mov	l, a
		mov	d, h
		mov	e, l
		inx	d
		ldax	d
		mov	m, a
		pop	h
		mov	a, l
		cpi	0B9h ; '╣'
		jnz	kL2
		pop	h
		ret
; END OF FUNCTION CHUNK	FOR sub_FA8B
; ───────────────────────────────────────────────────────────────────────────
		.db  33h ; 3
		.db  33h ; 3

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Выдача звукового сигнала

Song:					; sub_FBB9p FDC0p ...
		push	h
		push	d
		push	b
		push	psw
		xra	a
		lxi	b, 803Fh

Sn1:					; FB9Bj
		call	WriteByteMag	; Запись байта на магнитофон
		dcr	b
		jnz	Sn1
		jmp	Co1
; End of function Song

; ───────────────────────────────────────────────────────────────────────────

CObcLF:					; Переход  на новую строку и вывод ВС
		call	LF
		push	h
		mov	h, b
		mov	l, c
		call	COhl
		pop	h

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


COhl:					; FBA7p FDBDp
		call	COhlH		; Вывод	на консоль содержимого HL
		mov	a, m
; End of function COhl


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FBAF:				; loc_FDBAp FF71p
		call	COaH		; Вывод	на консоль содержимого A в 16
		call	Space		; Вывод	пробела
		call	sub_F92B
		rz
; End of function sub_FBAF


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FBB9:				; F855p F949p	...

; FUNCTION CHUNK AT F83A SIZE 00000029 BYTES
; FUNCTION CHUNK AT F865 SIZE 00000006 BYTES

		call	Song		; Выдача звукового сигнала
		jmp	loc_F865
; End of function sub_FBB9


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FBBF:				; Memoryp sub_FE40p
		call	sub_FBC6
		cc	sub_FBB9
		ret
; End of function sub_FBBF


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FBC6:				; sub_FBBFp FE87p
		lxi	d, BufIn

loc_FBC9:				; FCD3p FEB9p
		call	sub_FBD9
		lhld	Dat1
		xchg
		lhld	Dat3
; End of function sub_FBC6


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Сравнение адресов HL DE

Hilo:					; FB2Ep FCADp	...
		mov	a, h
		cmp	d
		rnz
		mov	a, l
		cmp	e
		ret
; End of function Hilo


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FBD9:				; loc_FBC9p
		call	sub_FC04
		call	Wr4HL
		rz
		call	sub_FC04
		call	Wr3HL
		rz
		call	sub_FC04
		call	Wr2HL
		rz
		call	sub_FC04
		jmp	WrHL
; End of function sub_FBD9


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Wr4HL:					; FBDCp
		shld	Dat1
; End of function Wr4HL


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Wr3HL:					; FBE3p
		shld	Dat3
; End of function Wr3HL


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


Wr2HL:					; FBEAp
		shld	Dat5
		lxi	h, 0

WrHL:					; FBF1j
		shld	unk_F757
		ret
; End of function Wr2HL


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FC04:				; sub_FBD9p FBE0p ...
		call	ControlIn	; Проверка введенных символов
		cc	sub_FBB9
		ret
; End of function sub_FC04


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Проверка введенных символов

ControlIn:				; sub_FC04p
		lxi	h, 0

Ctrl1:					; FC12j FC33j
		ldax	d
		inx	d
		cpi	20h ; ' '
		jz	Ctrl1
		cpi	0Dh
		rz
		cpi	30h ; '0'
		cmc
		rnc
		cpi	3Ah ; ':'
		jc	Ctrl2
		cpi	40h ; '@'
		cmc
		rnc

Ctrl2:					; FC1Ej
		call	sub_FC36
		rc
		dad	h
		rc
		dad	h
		rc
		dad	h
		rc
		dad	h
		rc
		add	l
		mov	l, a
		jmp	Ctrl1
; End of function ControlIn


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FC36:				; Ctrl2p
		sui	30h ; '0'
		rm
		cpi	0Ah
		cmc
		rm
		cpi	11h
		rm
		cpi	17h
		cmc
		rp
		sui	7
		ret
; End of function sub_FC36

; ───────────────────────────────────────────────────────────────────────────
		call	LF		; Переход на новую строку
		lhld	Dat1

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	на консоль содержимого HL

COhlH:					; COhlp sub_FC60p ...
		push	psw
		mov	a, h
		call	COaH		; Вывод	на консоль содержимого A в 16
		mov	a, l
		call	COaH		; Вывод	на консоль содержимого A в 16
; End of function COhlH

; START	OF FUNCTION CHUNK FOR Space

Cle1:					; FC68j
		mvi	a, 20h ; ' '

Cle2:					; FC6Ej
		call	Clear		; Очистка экрана
		pop	psw
		ret
; END OF FUNCTION CHUNK	FOR Space
; ───────────────────────────────────────────────────────────────────────────
		lhld	Dat1

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	на консоль содержимое HL и пробела

sub_FC60:				; FDD6p
		call	COhlH		; Вывод	на консоль содержимого HL
		mov	a, m
		call	COaH		; Вывод	на консоль содержимого A в 16
; End of function sub_FC60


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	пробела

Space:					; kLFp	FB45p ...

; FUNCTION CHUNK AT FC56 SIZE 00000007 BYTES

		push	psw
		jmp	Cle1
; End of function Space


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Переход на новую строку

LF:					; CObcLFp FC47p ...
		push	psw
		mvi	a, 0Ah
		jmp	Cle2
; End of function LF

; ───────────────────────────────────────────────────────────────────────────

WriteBlok:				; Запись блока данных на магнитофон
		call	KSblock
		lda	unk_F757
		ora	a
		jz	Wb1
		sta	unk_F75D	; Записать введенную константу записи

Wb1:					; FC78j
		xra	a
		mov	l, a

Wb2:					; FC84j
		call	WriteByteMag	; Запись байта на магнитофон
		dcr	l
		jnz	Wb2		; Вывести 256 нулей
		mvi	a, 0E6h	; 'ц'   ; Байт синхронизации
		call	WriteByteMag	; Запись байта на магнитофон
		lda	Dat2
		mov	h, a
		call	WriteByteMag	; Запись байта на магнитофон
		lda	Dat1		; Адрес	начала блока
		mov	l, a
		call	WriteByteMag	; Запись байта на магнитофон
		lda	Dat4
		mov	d, d
		call	WriteByteMag	; Запись байта на магнитофон
		lda	Dat3
		mov	e, e		; Адрес	конца блока
		call	WriteByteMag	; Запись байта на магнитофон

Wb3:					; FCB0j
		mov	a, m		; Вывести блок данных
		call	WriteByteMag	; Запись байта на магнитофон
		inx	h
		call	Hilo		; Сравнение адресов HL DE
		jnz	Wb3
		mov	a, c
		call	WriteByteMag	; Запись байта на магнитофон
		mov	a, b		; Контрольная сумма блока
		call	WriteByteMag	; Запись байта на магнитофон
		mvi	a, 20h ; ' '
		sta	unk_F75D	; Восстановить константу записи
		ret

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Проверка флага

FlagCtrl:				; MagInp FEB6p

; FUNCTION CHUNK AT FDBA SIZE 0000000C BYTES

		call	WrStackFF	; Запись в стэк	FF
		lxi	d, BufIn
		ldax	d
		cpi	59h ; 'Y'
		rnz
		inx	d
		jmp	WrStack0	; Запись нуля в	стэк
; ───────────────────────────────────────────────────────────────────────────

MagIn:					; Проверка флага
		call	FlagCtrl
		push	d
		call	loc_FBC9
		pop	d
		ldax	d
		xchg
		lxi	b, 0FD08h
		push	b
		mvi	b, 0FFh
		jz	loc_FD4B
		cpi	20h ; ' '
		lhld	Dat1

Mg1:					; FCEFj FCF6j	...
		mov	a, b
		jz	Mg5
		call	ReadByteMag	; Чтение байта с магнитофона
		cmp	h
		jnz	Mg1
		call	ReadByteSinx
		cmp	l
		jnz	Mg1
		call	ReadByteSinx
		cmp	d
		jnz	Mg1
		call	ReadByteSinx
		cmp	e
		jnz	Mg1
		ret
; ───────────────────────────────────────────────────────────────────────────
		inx	d
		push	h
		call	loc_FDAB
		jnz	loc_FD9A

Mg2:					; FD18j
		call	ReadByteSinx
		mov	m, a
		inx	h
		call	Hilo		; Сравнение адресов HL DE
		jnz	Mg2

Mg3:					; FDA8j
		call	ReadByteSinx
		mov	c, a
		call	ReadByteSinx
		mov	b, a

Mg4:					; FDC3j
		pop	h
		push	b
		call	COhlH		; Вывод	на консоль содержимого HL
		dcx	d
		xchg
		call	COhlH		; Вывод	на консоль содержимого HL
		call	loc_FE43
		call	Ks1
		xchg
		pop	b
		call	Ks1
		call	Hilo		; Сравнение адресов HL DE
		cnz	sub_FBB9
		ret
; ───────────────────────────────────────────────────────────────────────────

Mg5:					; FCE8j
		call	ReadByteMag	; Чтение байта с магнитофона
		call	ReadByteSinx
		call	ReadByteSinx
		jmp	ReadByteSinx
; ───────────────────────────────────────────────────────────────────────────

loc_FD4B:				; FCDFj
		cpi	20h ; ' '
		jnz	loc_FD57
		inx	h
		mov	a, m
		cpi	0Dh
		jnz	loc_FD82

loc_FD57:				; FD4Dj
		mov	a, m
		cpi	0Dh
		jz	loc_FD70

loc_FD5D:				; FD62j FD69j
		mov	a, b
		call	ReadByteMag	; Чтение байта с магнитофона
		cmp	d
		jnz	loc_FD5D
		call	ReadByteSinx
		cmp	e
		jnz	loc_FD5D
		xchg
		jmp	loc_FD79
; ───────────────────────────────────────────────────────────────────────────

loc_FD70:				; FD5Aj
		mov	a, b
		call	ReadByteMag	; Чтение байта с магнитофона
		mov	h, a
		call	ReadByteSinx
		mov	l, a

loc_FD79:				; FD6Dj
		call	ReadByteSinx
		mov	d, a
		call	ReadByteSinx
		mov	e, a
		ret
; ───────────────────────────────────────────────────────────────────────────

loc_FD82:				; FD54j
		mov	a, b
		call	ReadByteMag	; Чтение байта с магнитофона
		cma
		mov	h, a
		call	ReadByteSinx
		cma
		mov	l, a
		inx	h
		call	ReadByteSinx
		dad	d
		mov	b, a
		call	ReadByteSinx
		mov	c, a
		dad	b
		xchg
		ret
; ───────────────────────────────────────────────────────────────────────────

loc_FD9A:				; FD0Dj FDA5j
		call	ReadByteSinx
		cmp	m
		jnz	loc_FDBA
		inx	h
		call	Hilo		; Сравнение адресов HL DE
		jnz	loc_FD9A
		jmp	Mg3
; ───────────────────────────────────────────────────────────────────────────

loc_FDAB:				; FD0Ap Go1p
		lda	Stack
		ora	a
		ret
; ───────────────────────────────────────────────────────────────────────────

WrStack0:				; FCCCj
		xra	a		; Запись нуля в	стэк
; End of function FlagCtrl

; START	OF FUNCTION CHUNK FOR WrStackFF

WrS1:					; FDB7j
		sta	Stack
		ret
; END OF FUNCTION CHUNK	FOR WrStackFF

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Запись в стэк	FF

WrStackFF:				; FlagCtrlp

; FUNCTION CHUNK AT FDB1 SIZE 00000004 BYTES

		xra	a
		dcr	a
		jmp	WrS1
; End of function WrStackFF

; ───────────────────────────────────────────────────────────────────────────
; START	OF FUNCTION CHUNK FOR FlagCtrl

loc_FDBA:				; FD9Ej
		call	sub_FBAF
		call	COhl
		call	Song		; Выдача звукового сигнала
		jmp	Mg4
; END OF FUNCTION CHUNK	FOR FlagCtrl
; ───────────────────────────────────────────────────────────────────────────
		mov	a, l
		sub	e
		mov	l, a
		mov	a, h
		sbb	d
		mov	h, a
		ret
; ───────────────────────────────────────────────────────────────────────────

Memory:					; Правка памяти
		call	sub_FBBF
		cnz	sub_FBB9

loc_FDD3:				; FDEAj FE0Ej	...
		call	LF		; Переход на новую строку
		call	sub_FC60	; Вывод	на консоль содержимое HL и пробела
		call	sub_FE1D
		call	sub_FA8B
		cpi	1Ah
		jz	kDown
		cpi	19h
		jnz	kUp
		dcx	h
		jmp	loc_FDD3
; ───────────────────────────────────────────────────────────────────────────

kUp:					; FDE6j
		lxi	d, 0F77Bh
		ldax	d
		cpi	0Dh
		jz	kDown
		cpi	20h ; ' '
		jz	kDown
		cpi	27h ; '''
		jz	loc_FE11
		ani	0D0h
		rz
		push	h
		call	sub_FC04
		cnz	sub_FBB9
		mov	a, l
		pop	h
		mov	m, a

kDown:					; FDE1j FDF3j	...
		inx	h
		jmp	loc_FDD3
; ───────────────────────────────────────────────────────────────────────────

loc_FE11:				; FDFDj FE1Aj
		inx	d
		ldax	d
		cpi	0Dh
		jz	loc_FDD3
		mov	m, a
		inx	h
		jmp	loc_FE11

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FE1D:				; FDD9p
		push	h
		call	CmpCtrl		; Проверка на управляющие коды
		pop	h
		call	CO		; Вывод	на консоль в С
		jmp	Space		; Вывод	пробела
; End of function sub_FE1D


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Проверка на управляющие коды

CmpCtrl:				; FE1Ep
		mvi	c, 5Fh ; '_'
		ora	a
		rz
		rm
		lxi	h, Tbl2

Cmp1:					; FE33j
		cmp	m
		rz
		inr	l
		jnz	Cmp1
		mov	c, a
		ret
; End of function CmpCtrl


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Контрольная сумма блока

KSblock:				; WriteBlokp
		call	sub_FE40

Ks1:					; FD30p FD35p
		mov	h, b
		mov	l, c
		jmp	COhlH		; Вывод	на консоль содержимого HL
; End of function KSblock


; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FE40:				; KSblockp
		call	sub_FBBF

loc_FE43:				; FD2Dp
		inx	h
		lxi	b, 0

loc_FE47:				; FE52j
		ldax	d
		add	c
		mov	c, a
		mvi	a, 0
		adc	b
		mov	b, a
		inx	d
		call	Hilo		; Сравнение адресов HL DE
		jnz	loc_FE47
		ret
; End of function sub_FE40

; ───────────────────────────────────────────────────────────────────────────
		lxi	h, MonW
		push	h

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Вывод	содержимого регистров

Xreg:					; FEAEj FF29p
		call	LF		; Переход на новую строку
		lxi	h, DatReg
		lxi	d, NamReg	; Имена	регистров

Xr1:					; FE7Bj
		ldax	d
		ora	a
		jz	Xr2
		call	Clear		; Очистка экрана
		mvi	a, 3Dh ; '='
		call	Clear		; Очистка экрана
		inx	h
		mov	a, m
		inx	h
		push	h
		mov	h, m
		mov	l, a
		call	COhlH		; Вывод	на консоль содержимого HL
		pop	h
		inx	d
		jmp	Xr1
; ───────────────────────────────────────────────────────────────────────────

Xr2:					; FE65j FEA3j
		call	sub_FA8B
		lda	unk_F77B
		cpi	0Dh
		rz
		call	sub_FBC6
		lxi	h, NamReg	; Имена	регистров
		lxi	d, Dreg

Xr3:					; FE9Dj
		lda	unk_F77B
		cmp	m
		jz	Xr4
		inx	h
		inx	d
		inx	d
		mov	a, e
		cpi	6Fh ; 'o'
		jnz	Xr3
		call	Song		; Выдача звукового сигнала
		jmp	Xr2
; ───────────────────────────────────────────────────────────────────────────

Xr4:					; FE94j
		lhld	Dat1
		mov	a, l
		stax	d
		inx	d
		mov	a, h
		stax	d
		jmp	Xreg		; Вывод	содержимого регистров
; End of function Xreg

; ───────────────────────────────────────────────────────────────────────────

GOuser:					; Выполнение программы пользователя с точками останова
		mvi	a, 0C3h	; '├'
		sta	aDebug
		call	FlagCtrl	; Проверка флага
		call	loc_FBC9
		jz	Go1
		lhld	Dat3
		shld	aBreak
		mov	a, m
		sta	dBreak
		xchg
		lhld	Dat5
		shld	Point1
		mov	a, m
		sta	unk_F772
		lda	unk_F757
		sta	unk_F777
		mvi	a, 0FFh		; RST7 для отладки
		mov	m, a
		stax	d
		mvi	a, 0C3h	; '├'
		sta	38h
		lxi	h, Break	; Точка	останова
		shld	39h
		lxi	h, RetBreak	; Возврат из точки останова
		push	h

Go1:					; FEBCj
		call	loc_FDAB
		jnz	aDebug

Br2:					; FF4Dj FF60j
		lxi	sp, Dreg
		pop	psw
		pop	b
		pop	d
		pop	h
		pop	h
		sphl
		lhld	unk_F76B
		jmp	aDebug

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████


sub_FF02:				; loc_F865p Breakp
		shld	unk_F76B
		pop	h
		xthl
		dcx	h
		shld	unk_F76F
		push	psw
		lxi	h, 4
		dad	sp
		shld	unk_F76D
		pop	psw
		pop	h
		lxi	sp, 0F76Bh
		push	d
		push	b
		push	psw
		pchl
; End of function sub_FF02

; ───────────────────────────────────────────────────────────────────────────

RetBreak:				; FEE9o
		xra	a		; Возврат из точки останова
		sta	unk_F777
		jmp	Br1
; ───────────────────────────────────────────────────────────────────────────

Break:					; FEE3o
		call	sub_FF02	; Точка	останова
		lxi	sp, 0F7FDh
		call	Xreg		; Вывод	содержимого регистров
		lhld	unk_F76F
		xchg
		lhld	Point1
		call	Hilo		; Сравнение адресов HL DE
		jnz	Br3

Br1:					; FF20j
		lda	unk_F772
		mov	m, a
		shld	Dat1
		lhld	aBreak
		mvi	m, 0FFh
		lda	unk_F777
		dcr	a
		sta	unk_F777
		dcr	a
		jp	Br2

; ███████████████ S U B	R O U T	I N E ███████████████████████████████████████

; Восстановление данных	точки останова

sub_FF50:				; FF5Dp
		lda	dBreak
		mov	m, a
		ret
; End of function sub_FF50

; ───────────────────────────────────────────────────────────────────────────

Br3:					; FF36j
		mvi	m, 0FFh
		lhld	aBreak
		shld	Dat1
		call	sub_FF50	; Восстановление данных	точки останова
		jmp	Br2
; ───────────────────────────────────────────────────────────────────────────

Scroll:					; Включение выключение скроллинга
		dcr	c
		dcr	c
		mov	a, c
		sta	FlagSc
		ret
; ───────────────────────────────────────────────────────────────────────────

PrintAscii:				; Распечатка ASCII кодов
		lxi	h, BufIn

Pr1:					; FF75j
		mov	a, m
		cpi	0Dh
		rz
		call	sub_FBAF
		inx	h
		jmp	Pr1
; ───────────────────────────────────────────────────────────────────────────
aOsT88:		.db 0Ah			; F834o
		.text "**** os   *   `T-88 ****"
		.db 0Ah
		.db 0
aT88:		.db 0Ah			; F841o
		.text "`T*88> "
		.db 0
TblCom:		.db  49h ; I
		.dw 0FCCFh		; MagIn
		.db  4Fh ; O
		.dw 0FC71h		; WriteBlock
		.db  4Dh ; M
		.dw 0FDCDh		; Правка памяти
		.db  47h ; G
		.dw 0FEB1h		; GOuser
		.db  58h ; X
		.dw 0FE56h		; Xreg
		.db  4Bh ; K
		.dw 0FE38h		; KSblock
		.db  56h ; V
		.dw 0C0FAh		; Автоподстройка константы ввода
		.db  52h ; R
		.dw 0FF63h		; Scroll
		.db  43h ; C
		.dw 0C000h		; Копирование участка памяти
		.db  44h ; D
		.dw 0C0B5h		; Вывод	содержимого ОЗУ
		.db  46h ; F
		.dw 0C063h		; Заполнение области памяти константой
		.db  4Ah ; J
		.dw 0C0A2h
TblCom2:	.db  48h ; H		; FA40o
		.dw 0C092h		; Сумма	разность HL DE
		.db  54h ; T
		.dw 0FF6Ah		; Распечатка ASCII кодов
		.db  53h ; S
		.dw 0C134h		; Поиск	строки
		.db  45h ; E
		.dw 0CB00h		; Вызов	редактора Микрон
		.db  41h ; A
		.dw 0CA20h		; Ассемблер
		.db  4Eh ; N
		.dw 0CAC2h		; Итерактивный ассемблер
		.db  40h ; @
		.dw 0CAADh		; Этка
		.db  4Ch ; L
		.dw 0C386h		; Содержимое ОЗУ в символьном виде
		.db  57h ; W
		.dw 0C3C2h		; Дизассемблер
		.db  5Ah ; Z
		.dw 0C1EBh		; Карта	загрузки (просмотр меток)
		.db  50h ; P
		.dw 0C227h		; Релокатор
		.db  1Fh
		.dw 0F9E9h		; Очистка экрана
		.db  42h ; B		; Ассемблер Микрон
		.dw 0D800h
		.db    0
NamReg:		.text "ABDHSO"          ; FE60o FE8Ao
		.db 0			; Имена	регистров
		.db  38h ; 8
		.db  33h ; 3
		.db  40h ; @
		.db  48h ; H
		.db  38h ; 8
		.db  1Eh
		.db  2Fh ; /
		.db  4Fh ; O
Tbl1:		.db  20h		; Ci6o
					; Таблица управляющих символов
Tbl2:		.db  18h		; F9FBo FE2Do
		.db    8
		.db  19h
		.db  1Ah
		.db  0Dh
		.db  1Fh
		.db  0Ch
		.db  0Ah
; end of 'ROM'


		.end
